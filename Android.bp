headers_src = [
    "include/uapi/ais/*/**/*.h",
]

ais_headers_out = [
    "media/ais_isp.h",
    "media/ais_sensor.h",
    "media/ais_v4l2loopback.h",
    "media/cam_cpas.h",
    "media/cam_defs.h",
    "media/cam_fd.h",
    "media/cam_icp.h",
    "media/cam_isp.h",
    "media/cam_isp_ife.h",
    "media/cam_isp_vfe.h",
    "media/cam_jpeg.h",
    "media/cam_lrme.h",
    "media/cam_req_mgr.h",
    "media/cam_sensor.h",
    "media/cam_sync.h",

]

ais_kernel_headers_verbose = "--verbose "
genrule {
    name: "qti_generate_ais_kernel_headers",
    tools: ["headers_install.sh",
            "unifdef"
    ],
    tool_files: [
         "ais_kernel_headers.py",
    ],
    srcs: headers_src,
    cmd: "python3 -u $(location ais_kernel_headers.py) " +
        ais_kernel_headers_verbose +
        "--header_arch arm64 " +
        "--gen_dir $(genDir) " +
        "--ais_include_uapi $(locations include/uapi/ais/*/**/*.h) " +
        "--unifdef $(location unifdef) " +
        "--headers_install $(location headers_install.sh)",
    out: ais_headers_out,
}

cc_library_headers {
    name: "qti_ais_kernel_uapi",
    generated_headers: ["qti_generate_ais_kernel_headers"],
    export_generated_headers: ["qti_generate_ais_kernel_headers"],
    vendor: true,
    recovery_available: true
}
